{\rtf1\ansi\ansicpg1252\cocoartf2512
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\fnil\fcharset0 AndaleMono;\f2\fswiss\fcharset0 Helvetica;
\f3\fnil\fcharset0 Menlo-Regular;\f4\fswiss\fcharset0 Helvetica-Bold;\f5\fswiss\fcharset0 Helvetica-Oblique;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue233;\red0\green0\blue0;\red170\green13\blue145;
\red11\green79\blue121;\red63\green110\blue116;\red92\green38\blue153;\red15\green104\blue160;\red0\green116\blue0;
\red196\green26\blue22;\red0\green0\blue233;\red2\green2\blue2;\red31\green31\blue31;\red28\green0\blue207;
\red46\green13\blue110;\red162\green91\blue55;\red162\green91\blue55;\red38\green71\blue75;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c93333;\csgenericrgb\c0\c0\c0;\csgenericrgb\c66500\c5200\c56900;
\csgenericrgb\c4314\c30980\c47451;\csgenericrgb\c24700\c43100\c45600;\csgenericrgb\c35900\c14900\c60100;\csgenericrgb\c5882\c40784\c62745;\csgenericrgb\c0\c45600\c0;
\csgenericrgb\c77000\c10200\c8600;\cssrgb\c0\c0\c93333;\csgenericrgb\c784\c784\c784;\cssrgb\c16078\c16078\c16078;\csgenericrgb\c11000\c0\c81000;
\csgenericrgb\c18100\c5200\c43100;\csgenericrgb\c63573\c35812\c21460\c35000;\csgenericrgb\c63573\c35812\c21460;\csgenericrgb\c14900\c27800\c29400;}
\deftab720
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://www.amazon.com/Merax-Mountain-Suspension-24-Speed-Lightweight/dp/B07VVPJML2/ref=sr_1_65?dchild=1&keywords=bicycle%2Bfor%2Bmen&qid=1595098827&sr=8-65&th=1"}}{\fldrslt 
\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\ul \ulc2 \outl0\strokewidth0 \strokec2 https://www.amazon.com/Merax-Mountain-Suspension-24-Speed-Lightweight/dp/B07VVPJML2/ref=sr_1_65?dchild=1&keywords=bicycle%2Bfor%2Bmen&qid=1595098827&sr=8-65&th=1}}
\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\ul \ulc2 \outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://www.amazon.com/EUROBIKE-EURXC550-Speed-Wheels-Bicycle/dp/B07B5XQ2N4/ref=sr_1_93?dchild=1&keywords=bicycle%2Bfor%2Bmen&qid=1595098908&sr=8-93&th=1&psc=1"}}{\fldrslt \cf2 \ulc2 https://www.amazon.com/EUROBIKE-EURXC550-Speed-Wheels-Bicycle/dp/B07B5XQ2N4/ref=sr_1_93?dchild=1&keywords=bicycle%2Bfor%2Bmen&qid=1595098908&sr=8-93&th=1&psc=1}}\
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://www.amazon.com/Merax-Mountain-Suspension-Aluminum-Bicycle/dp/B082PPCVFL/ref=sr_1_8?dchild=1&keywords=mountain%2Bbike&pd_rd_r=630da58a-e917-4348-8fef-efeaee712d17&pd_rd_w=M0kBq&pd_rd_wg=PMKO8&pf_rd_p=0ec05f25-9534-48fe-9c3e-40b89957230e&pf_rd_r=9CK3DAG6XFVXCYKWMRVX&qid=1595098114&sr=8-8&th=1"}}{\fldrslt \cf2 \ulc2 https://www.amazon.com/Merax-Mountain-Suspension-Aluminum-Bicycle/dp/B082PPCVFL/ref=sr_1_8?dchild=1&keywords=mountain%2Bbike&pd_rd_r=630da58a-e917-4348-8fef-efeaee712d17&pd_rd_w=M0kBq&pd_rd_wg=PMKO8&pf_rd_p=0ec05f25-9534-48fe-9c3e-40b89957230e&pf_rd_r=9CK3DAG6XFVXCYKWMRVX&qid=1595098114&sr=8-8&th=1}}\
\
\pard\pardeftab720\partightenfactor0

\f1\fs42 \cf3 \kerning1\expnd0\expndtw0 \ulnone \outl0\strokewidth0 prime
\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\ul \ulc2 \outl0\strokewidth0 \strokec2 \
	{\field{\*\fldinst{HYPERLINK "https://www.amazon.com/Hiland-Hybrid-Commuter-Bicycle-Comfortable/dp/B0812PZX6M/ref=sr_1_34?dchild=1&keywords=bicycle&qid=1595097792&refinements=p_85%3A2470955011&rnid=2470954011&rps=1&sr=8-34&th=1"}}{\fldrslt https://www.amazon.com/Hiland-Hybrid-Commuter-Bicycle-Comfortable/dp/B0812PZX6M/ref=sr_1_34?dchild=1&keywords=bicycle&qid=1595097792&refinements=p_85%3A2470955011&rnid=2470954011&rps=1&sr=8-34&th=1}}\
\

\f1\fs42 \cf3 \kerning1\expnd0\expndtw0 \ulnone \outl0\strokewidth0 lock\
\pard\tx816\pardeftab816\pardirnatural\partightenfactor0
\cf3 helmets\
warning light\
\

\fs34 \cf4 class\cf3  \cf5 History\cf3 : \cf6 Storable\cf3  \{\
    \cf4 class\cf3  \cf5 Record\cf3 : \cf7 CustomDebugStringConvertible\cf3 , \cf6 Storable\cf3  \{\
        \cf4 var\cf3  \cf8 completed\cf3 : \cf7 Date\cf3      \cf9 // date exercise was finished\cf3 \
        \cf4 var\cf3  \cf8 weight\cf3 : \cf7 Double\cf3       \cf9 // may be 0.0\cf3 \
        \cf4 var\cf3  \cf8 label\cf3 : \cf7 String\cf3        \cf9 // "3x60s"\cf3 \
        \cf4 var\cf3  \cf8 key\cf3 : \cf7 String\cf3          \cf9 // exercise.name + workout.name\cf3 \
        \cf4 var\cf3  \cf8 note\cf3 : \cf7 String\cf3  = \cf10 ""\cf3    \cf9 // optional arbitrary text set by user\cf3 \
\cf4 \
\cf3     \cf4 func\cf3  \cf8 exercise\cf3 (\cf4 _\cf3  workout: \cf6 Workout\cf3 , \cf4 _\cf3  exercise: \cf6 Exercise\cf3 ) -> \cf6 History\cf3 .\cf6 Iterator\cf3  \{\cf4 \
\
class\cf3  \cf5 Current\cf3 : \cf7 CustomDebugStringConvertible\cf3  \{\
    \cf4 var\cf3  \cf8 startDate\cf3 : \cf7 Date\cf3      \cf9 // date exercise was started\cf3 \
    \cf4 var\cf3  \cf8 weight\cf3 : \cf7 Double\cf3       \cf9 // may be 0.0\cf3 \
    \cf4 var\cf3  \cf8 setIndex\cf3 : \cf7 Int\cf3        \cf9 // if this is sets.count then the user has finished those sets\cf3 \
\
\cf4 enum\cf3  \cf5 Sets\cf3 : \cf7 CustomDebugStringConvertible\cf3  \{\
    \cf4 case\cf3  \cf8 durations\cf3 ([\cf6 DurationSet\cf3 ], targetDuration: \cf7 Int\cf3 ? = \cf4 nil\cf3 )\
    \cf4 case\cf3  \cf8 maxReps\cf3 (restSecs: [\cf7 Int\cf3 ], targetReps: \cf7 Int\cf3 ? = \cf4 nil\cf3 )\
    \cf4 case\cf3  \cf8 repRanges\cf3 (warmups: [\cf6 RepsSet\cf3 ], worksets: [\cf6 RepsSet\cf3 ], backoffs: [\cf6 RepsSet\cf3 ])\
\cf4 \
class\cf3  \cf5 Modality\cf3 : \cf7 CustomDebugStringConvertible\cf3  \{\
    \cf4 var\cf3  \cf8 apparatus\cf3 : \cf6 Apparatus\cf3 \
    \cf4 var\cf3  \cf8 sets\cf3 : \cf6 Sets\cf3 \
\cf4 \
class\cf3  \cf5 Expected\cf3 : \cf7 CustomDebugStringConvertible\cf3  \{\
    \cf4 var\cf3  \cf8 weight\cf3 : \cf7 Double\cf3       \cf9 // may be 0.0\cf3 \
    \cf4 var\cf3  \cf8 reps\cf3 : \cf7 Int\cf3 ?          \cf9 // set for Sets.repsRanges, indicates where the user is within a variable reps set, can also override fixed reps\cf3 \
\cf4 \
class\cf3  \cf5 Exercise\cf3 : \cf7 Hashable\cf3 , \cf7 Identifiable\cf3  \{\
    \cf4 var\cf3  \cf8 name\cf3 : \cf7 String\cf3              \cf9 // "Heavy Bench"\cf3 \
    \cf4 var\cf3  \cf8 formalName\cf3 : \cf7 String\cf3        \cf9 // "Bench Press"\cf3 \
    \cf4 var\cf3  \cf8 modality\cf3 : \cf6 Modality\cf3 \
    \cf4 var\cf3  \cf8 expected\cf3 : \cf6 Expected\cf3 \
    \cf4 var\cf3  \cf8 current\cf3 : \cf6 Current\cf3 ? = \cf4 nil\cf3  \cf9 // this is reset to nil if it's been too long since the user was doing the exercise\cf3 \
    \cf4 let\cf3  \cf8 id\cf3 : \cf7 Int\cf3 \
\pard\pardeftab720\partightenfactor0

\f0\fs36 \cf11 \expnd0\expndtw0\kerning0
\ul \ulc11 \
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://developer.apple.com/tutorials/swiftui/creating-and-combining-views"}}{\fldrslt \cf11 \ulc11 https://developer.apple.com/tutorials/swiftui/creating-and-combining-views}}\
\pard\pardeftab720\partightenfactor0

\fs24 \cf11 \ulc11 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0

\f2\fs48 \cf12 \kerning1\expnd0\expndtw0 \ulnone Personal - user data, e.g. sex, age, and fitness\
Workouts - relatively fixed list of what the user is expected to do, includes edit notes\
History - historical data for exercises, index by formal name, include exercise name, \
	maybe also workout(s) name, probably also set info, maybe also routine name\
Expected - what the user should do\
Progression - how current should change over time, usually weight, could also auto-add exercises\
Advisor - uses personal, edit notes, history, and plan to suggest edits, weight changes, etc\
Stringify - text renderer\
\
Program = Workouts + Plan + Advisor(?)\
	could have hashtable of Exercise to Current+History, maybe also Plan and Advisor
\f3 \cf13 \expnd0\expndtw0\kerning0
\

\f2 \cf12 \kerning1\expnd0\expndtw0 \
\'95\'a0Get history working somehow:\
	- max reps needs a history button\
\'95\'a0daysAgo should be based on hoursAgo?\
\pard\pardeftab720\partightenfactor0
\cf12 \'95 Should we alternate cardio only and all days?\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0
\cf12 \'95 Get notes button working\
\'95\'a0Get options button working\
\'95 Hard code some info\
	- age\
	- sex\
	- fitness level\
\'95\'a0Probably should support metric units early.\
	- maybe via a Weight class\
	- or maybe just rely on some sort of presentation function\
\'95 Would be nice to easily edit results of last exercise, especially for stuff like pullups.\
\'95\'a0Would be cool to hard-code some real lifting numbers into history.\
\'95\'a0Add a wizard to build an initial workout.\
\'95 Support stuff like leg press:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0
\cf12 	- should we have a DiscreteWeight type?\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0
\cf12 \'95 Support dumbbells\
\'95\'a0Support barbells\
\'95\'a0Just have a handful of starter programs. Or maybe just synthesize one based on a wizard?\
	- then user can edit without worrying about what is built-in or not\
\
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://www.raywenderlich.com/7242045-swift-package-manager-for-ios"}}{\fldrslt 
\f0\fs36 \cf11 \expnd0\expndtw0\kerning0
\ul https://www.raywenderlich.com/7242045-swift-package-manager-for-ios}}
\f0\fs36 \cf11 \expnd0\expndtw0\kerning0
\ul \ulc11 \
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://artsy.github.io/blog/2019/01/05/its-time-to-use-spm/"}}{\fldrslt 
\fs38 \cf11 \ulc11 https://artsy.github.io/blog/2019/01/05/its-time-to-use-spm/}}
\f2\fs48 \cf12 \kerning1\expnd0\expndtw0 \ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0
\cf12 	\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0

\f4\b \cf12 SwiftUI
\f2\b0 \
\'95\'a0when to use property wrappers: {\field{\*\fldinst{HYPERLINK "https://jaredsinclair.com/2020/05/07/swiftui-cheat-sheet.html"}}{\fldrslt 
\f0\fs34 \cf11 \expnd0\expndtw0\kerning0
\ul https://jaredsinclair.com/2020/05/07/swiftui-cheat-sheet.html}}\
\'aa property wrapper overview: {\field{\*\fldinst{HYPERLINK "https://swiftwithmajid.com/2019/06/12/understanding-property-wrappers-in-swiftui/"}}{\fldrslt 
\f0\fs36 \cf11 \expnd0\expndtw0\kerning0
\ul https://swiftwithmajid.com/2019/06/12/understanding-property-wrappers-in-swiftui/}}\
\'95 view.body can only have a single view: can use stacks for multiple groups\
\'95\'a0List works with identifiable data\
	either implement Identifiable protocol\
	or pass along with the data a key path to a property that uniquely identifies the element\
\'95\'a0List sub-views don\'92t have to be the same subtype, can explicitly add sub-views, or handle it similar to ForEach\
\'95\'a0List navigation requires\
	1) embed the List in a NavigationView\
	2) embed each row view within a NavigationLink (to setup transition to dest view when clicked)\
	    simple value type elements can use \\.self as the key path, see LanmarkList_Previews in {\field{\*\fldinst{HYPERLINK "https://developer.apple.com/tutorials/swiftui/building-lists-and-navigation"}}{\fldrslt 
\f0\fs34 \cf11 \expnd0\expndtw0\kerning0
\ul https://developer.apple.com/tutorials/swiftui/building-lists-and-navigation}}\
\'95 ForEach is like List but doesn\'92t have a special appearence\
	- can use ForEach inside List, see {\field{\*\fldinst{HYPERLINK "https://stackoverflow.com/questions/56535326/what-is-the-difference-between-list-and-foreach-in-swiftui"}}{\fldrslt 
\f0\fs34 \cf11 \expnd0\expndtw0\kerning0
\ul https://stackoverflow.com/questions/56535326/what-is-the-difference-between-list-and-foreach-in-swiftui}}\
\'95\'a0Views can wrap other views to encapsulate a series of modifiers\
	- see CircleImage in {\field{\*\fldinst{HYPERLINK "https://developer.apple.com/tutorials/swiftui/building-lists-and-navigation"}}{\fldrslt 
\f0\fs34 \cf11 \expnd0\expndtw0\kerning0
\ul https://developer.apple.com/tutorials/swiftui/building-lists-and-navigation}}\
\'95 GeometryReader is used to retrieve sizing info from parent view\
\'95 animations are kind of cool: can fade or slide in and out\
\'95 can use the @State attribute to mark fields that change over time\
	- views are structs and structs can\'92t normally change their own fields, see {\field{\*\fldinst{HYPERLINK "https://medium.com/flawless-app-stories/swiftui-understanding-state-8afa23fd9f1f"}}{\fldrslt 
\f0\fs34 \cf11 \expnd0\expndtw0\kerning0
\ul https://medium.com/flawless-app-stories/swiftui-understanding-state-8afa23fd9f1f}}\
\'95 bindings act as a reference to mutable state\
\'95 ObservableObjects are bound to a view and loaded from storage\
	- @Published attribute is used to notify UI to update\
\'95 @EnvironmentObject is used to bind to data passed downward via the environmentObject modifier\
\'95 previews are used by the Canvas inspector, can use Group to show variations\
\'95 command-click brings up the structed editing popover\
\'95 button placement: {\field{\*\fldinst{HYPERLINK "https://developer.apple.com/design/human-interface-guidelines/ios/views/alerts/"}}{\fldrslt 
\f0\fs32 \cf11 \expnd0\expndtw0\kerning0
\ul \ulc11 https://developer.apple.com/design/human-interface-guidelines/ios/views/alerts/}}\
\'95 \cf12 font types:\cf12  {\field{\*\fldinst{HYPERLINK "https://i.stack.imgur.com/89c8C.png"}}{\fldrslt 
\f0\fs38 \cf11 \expnd0\expndtw0\kerning0
\ul https://i.stack.imgur.com/89c8C.png}}\

\f4\b \
Goals\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0

\f2\b0 \cf12 \'95\'a0Make it a lot easier to change up exercises and plans\
	- probably want to lean on wizards\
	- recommend stuff like \
		` moving on to non-linear progression\
		` adding rest\
		` more protein\
		` changing rep range\
		` being more consistent\
		` conditioning\
		` address weak point (this can be specific to some of the key exercises)\
		` technique\
		` probably want to do only one of these at a time (this could be a strong recommendation)\
		` record what the change was\
	- depends on stuff like age, sex, stalled, regressed, sleep, diet, consistency, cutting\
	- probably want to remember their level\
	- wait a month after last action and provide a new recommendation (or tell them they're doing well)\
\'95\'a0Heart rate can tell you if over trained? Can we hook into other app's medical data?\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0

\f4\b \cf12 \'95\'a0
\f2\b0 Do much bettered showing long term trends\
	- both overall and for an exercise\
	- include actions taken in response to a recommendation\
	- probably should also allow for user notes\
\'95\'a0May want a way to save the current iteration of a workout.\
\'95 Awards would be great.\
\'95 Don't worry about tracking cardio.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0

\f4\b\fs60 \cf12 Workouts Tab
\fs48 \
Workouts     
\f2\b0 \ul \ulc12 Edit
\f4\b \ulnone \

\f2\b0 Heavy >        
\f5\i goes to a Workout view
\f2\i0 \
Light >\
Medium >\
	\

\f4\b Heavy     
\f2\b0 \ul Edit
\f4\b \ulnone \

\f2\b0 Bench >        
\f5\i goes to an Exercise view
\f2\i0 \
Squat >\
Dead >\
\

\f4\b Bench     
\f2\b0 \ul Notes
\f4\b \ulnone  
\f2\b0 \ul Edit
\f4\b \ulnone \

\f2\b0 Set 1 of 1\
8 reps @ 125 lbs\
\ul Done\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0

\f4\b\fs60 \cf12 \ulnone History Tab
\fs48 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0

\f2\b0 \cf12 should this have a way to see exercises that are not currently used?\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0

\f4\b\fs60 \cf12 \
Advise Tab
\fs48 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0

\f2\b0 \cf12 tell them if they are on track?\
can we make the tab red if advise is pending?\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0

\f4\b\fs60 \cf12 \
Settings Tab
\fs48 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0

\f2\b0 \cf12 DoB\
gender\
level\
\
\
\pard\tx816\pardeftab816\pardirnatural\partightenfactor0

\f1\fs34 \cf3     \
    \cf9 // Returns the currentReps and maximum used for worksets.\cf3 \
    \cf4 func\cf3  \cf8 repRange\cf3 (currentReps: \cf7 Int\cf3 ?) -> (\cf7 Int\cf3 , \cf7 Int\cf3 ) \{\
        \cf4 var\cf3  minReps = \cf14 1\cf3 \
        \cf4 var\cf3  maxReps = \cf14 1\cf3 \
        \
        \cf4 if\cf3  \cf4 let\cf3  set = \cf6 worksets\cf3 .\cf15 first\cf3 (where: \{$0.\cf6 reps\cf3 .\cf6 min\cf3  \cf15 <\cf3  $0.\cf6 reps\cf3 .\cf6 max\cf3 \}) \{\
            \cf4 if\cf3  \cf4 let\cf3  current = currentReps \{            \cf9 // currentReps only applies if set.minReps < set.maxReps\cf3 \
                minReps = current\
                maxReps = current \cf15 <\cf3  set.\cf6 reps\cf3 .\cf6 max\cf3  ? set.\cf6 reps\cf3 .\cf6 max\cf3  : current\
            \} \cf4 else\cf3  \{\
                minReps = set.\cf6 reps\cf3 .\cf6 min\cf3 \
                maxReps = set.\cf6 reps\cf3 .\cf6 max\cf3 \
            \}\
\
        \} \cf4 else\cf3  \cf4 if\cf3  \cf4 let\cf3  last = \cf6 worksets\cf3 .\cf7 last\cf3  \{\
            minReps = last.\cf6 reps\cf3 .\cf6 min\cf3 \
            maxReps = last.\cf6 reps\cf3 .\cf6 max\cf3 \
        \}\
        \
        \cf4 return\cf3  (minReps, maxReps)\
    \}\
    \
    \cf16 ///\cf3  \cf17 Returns details about what the user is expected to do for the sets. For example,\cf3 \
    \cf16 ///\cf3     \cf17 3x5 @ 195 lbs     if reps are all the same\cf3 \
    \cf16 ///\cf3     \cf17 5,3,1+ @ 195 lbs  if percentages are all the same\cf3 \
    \cf16 ///\cf3     \cf17 1+ @ 195 lbs      otherwise\cf3 \
    \cf4 func\cf3  \cf8 summary\cf3 (\cf4 _\cf3  apparatus: \cf6 Apparatus\cf3 ?, \cf4 _\cf3  targetWeight: \cf7 Double\cf3 , \cf4 _\cf3  currentReps: \cf7 Int\cf3 ?) -> \cf7 String\cf3  \{ \cf9 // TODO: not sure presentation stuff belongs here\cf3 \
        \cf4 func\cf3  \cf8 repsStr\cf3 (\cf4 _\cf3  set: \cf6 Set\cf3 ) -> \cf7 String\cf3  \{\
            \cf4 if\cf3  \cf4 let\cf3  current = currentReps \{\
                \cf4 if\cf3  current \cf15 <\cf3  set.\cf6 reps\cf3 .\cf6 max\cf3  \{\
                    \cf4 return\cf3  \cf10 "\cf3 \\(current)\cf10 -\cf3 \\(set.\cf6 reps\cf3 .\cf6 max\cf3 )\cf10 "\cf3 \
                \} \cf4 else\cf3  \{\
                    \cf4 return\cf3  \cf10 "\cf3 \\(current)\cf10 "\cf3 \
                \}\
            \} \cf4 else\cf3  \{\
                \cf4 return\cf3  \cf10 "\cf3 \\(set.\cf6 reps\cf3 .\cf6 max\cf3 )\cf10 "\cf3 \
            \}\
        \}\
        \
        \cf4 func\cf3  \cf8 weightStr\cf3 (\cf4 _\cf3  set: \cf6 Set\cf3 ) -> \cf7 String\cf3  \{\
            \cf4 var\cf3  weight = \cf10 ""\cf3 \
            \cf4 if\cf3  targetWeight > \cf14 0.0\cf3  \{\
                \cf4 let\cf3  suffix = set.\cf6 percent\cf3 .\cf6 label\cf3 \
                \cf4 if\cf3  \cf4 let\cf3  apparatus = apparatus \{\
                    weight = \cf10 " @ "\cf3  \cf15 +\cf3  apparatus.\cf18 findClosest\cf3 (targetWeight\cf18 *\cf3 set.\cf6 percent\cf3 ).\cf6 label\cf3  \cf15 +\cf3  suffix\
                \} \cf4 else\cf3  \{\
                    weight = \cf10 " @ "\cf3  \cf15 +\cf3  \cf18 friendlyUnitsStr\cf3 (targetWeight\cf18 *\cf3 set.\cf6 percent\cf3 ) \cf15 +\cf3  suffix\
                \}\
            \}\
            \cf4 return\cf3  weight\
        \}\
        \
        \cf4 if\cf3  \cf4 let\cf3  first = \cf6 worksets\cf3 .\cf7 first\cf3  \{\
            \cf4 let\cf3  sameReps = \cf6 worksets\cf3 .\cf18 all\cf3  \{$0.\cf6 reps\cf3 .\cf6 min\cf3  \cf15 ==\cf3  first.\cf6 reps\cf3 .\cf6 min\cf3  \cf15 &&\cf3  $0.\cf6 reps\cf3 .\cf6 max\cf3  \cf15 ==\cf3  first.\cf6 reps\cf3 .\cf6 max\cf3 \}\
            \cf4 let\cf3  samePercents = \cf6 worksets\cf3 .\cf18 all\cf3  \{$0.\cf6 percent\cf3 .\cf6 label\cf3  \cf15 ==\cf3  first.\cf6 percent\cf3 .\cf6 label\cf3 \}\
            \
            \cf4 if\cf3  sameReps \cf15 &&\cf3  samePercents \{\
                \cf4 return\cf3  \cf10 "\cf3 \\(\cf6 worksets\cf3 .\cf7 count\cf3 )\cf10 x\cf3 \\(\cf18 repsStr\cf3 (first))\\(\cf18 weightStr\cf3 (first))\cf10 "\cf3 \
\
            \} \cf4 else\cf3  \cf4 if\cf3  samePercents \{\
                \cf4 let\cf3  labels = \cf6 worksets\cf3 .\cf15 map\cf3  \{\cf18 repsStr\cf3 ($0)\}\
                \cf4 let\cf3  label = labels.\cf15 joined\cf3 (separator: \cf10 ","\cf3 )\
                \cf4 return\cf3  \cf10 "\cf3 \\(label)\\(\cf18 weightStr\cf3 (first))\cf10 "\cf3 \
            \
            \} \cf4 else\cf3  \cf4 if\cf3  \cf4 let\cf3  last = \cf6 worksets\cf3 .\cf7 last\cf3  \{\
                \cf4 return\cf3  \cf10 "\cf3 \\(\cf18 repsStr\cf3 (last))\\(\cf18 weightStr\cf3 (last))\cf10 "\cf3 \
            \}\
        \}\
        \cf4 return\cf3  \cf10 ""\cf3 \
    \}\
\
\pard\pardeftab720\partightenfactor0
\cf4 fileprivate\cf3  \cf4 func\cf3  \cf8 phash\cf3 () -> \cf7 Int\cf3  \{\
\pard\tx816\pardeftab816\pardirnatural\partightenfactor0
\cf3     \cf4 return\cf3  \cf4 self\cf3 .apparatus.phash() &+ \cf4 self\cf3 .restSecs.hashValue &+ \cf4 self\cf3 .sets.phash()\
\}\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0

\f2\fs48 \cf12 \
}