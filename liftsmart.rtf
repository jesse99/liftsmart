{\rtf1\ansi\ansicpg1252\cocoartf2512
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 AndaleMono;\f1\froman\fcharset0 Times-Roman;\f2\fswiss\fcharset0 Helvetica;
\f3\fswiss\fcharset0 Helvetica-Bold;\f4\fnil\fcharset0 HelveticaNeue;\f5\fswiss\fcharset0 Helvetica-Oblique;
}
{\colortbl;\red255\green255\blue255;\red170\green13\blue145;\red0\green0\blue0;\red11\green79\blue121;
\red63\green110\blue116;\red92\green38\blue153;\red15\green104\blue160;\red0\green116\blue0;\red196\green26\blue22;
\red0\green0\blue233;\red2\green2\blue2;\red0\green0\blue0;\red27\green31\blue34;\red255\green255\blue255;
}
{\*\expandedcolortbl;;\csgenericrgb\c66500\c5200\c56900;\csgenericrgb\c0\c0\c0;\csgenericrgb\c4314\c30980\c47451;
\csgenericrgb\c24700\c43100\c45600;\csgenericrgb\c35900\c14900\c60100;\csgenericrgb\c5882\c40784\c62745;\csgenericrgb\c0\c45600\c0;\csgenericrgb\c77000\c10200\c8600;
\cssrgb\c0\c0\c93333;\csgenericrgb\c784\c784\c784;\cssrgb\c0\c0\c0;\cssrgb\c14118\c16078\c18039;\cssrgb\c100000\c100000\c100000;
}
\deftab816
\pard\tx816\pardeftab816\pardirnatural\partightenfactor0

\f0\fs34 \cf2 class\cf3  \cf4 History\cf3 : \cf5 Storable\cf3  \{\
    \cf2 class\cf3  \cf4 Record\cf3 : \cf6 CustomDebugStringConvertible\cf3 , \cf5 Storable\cf3  \{\
        \cf2 var\cf3  \cf7 completed\cf3 : \cf6 Date\cf3      \cf8 // date exercise was finished\cf3 \
        \cf2 var\cf3  \cf7 weight\cf3 : \cf6 Double\cf3       \cf8 // may be 0.0\cf3 \
        \cf2 var\cf3  \cf7 label\cf3 : \cf6 String\cf3        \cf8 // "3x60s"\cf3 \
        \cf2 var\cf3  \cf7 key\cf3 : \cf6 String\cf3          \cf8 // exercise.name + workout.name\cf3 \
        \cf2 var\cf3  \cf7 note\cf3 : \cf6 String\cf3  = \cf9 ""\cf3    \cf8 // optional arbitrary text set by user\cf3 \
\cf2 \
\cf3     \cf2 func\cf3  \cf7 exercise\cf3 (\cf2 _\cf3  workout: \cf5 Workout\cf3 , \cf2 _\cf3  exercise: \cf5 Exercise\cf3 ) -> \cf5 History\cf3 .\cf5 Iterator\cf3  \{\cf2 \
\
class\cf3  \cf4 Current\cf3 : \cf6 CustomDebugStringConvertible\cf3  \{\
    \cf2 var\cf3  \cf7 startDate\cf3 : \cf6 Date\cf3      \cf8 // date exercise was started\cf3 \
    \cf2 var\cf3  \cf7 weight\cf3 : \cf6 Double\cf3       \cf8 // may be 0.0\cf3 \
    \cf2 var\cf3  \cf7 setIndex\cf3 : \cf6 Int\cf3        \cf8 // if this is sets.count then the user has finished those sets\cf3 \
\
\cf2 struct\cf3  \cf4 RepRange\cf3 : \cf6 CustomDebugStringConvertible\cf3 , \cf5 Storable\cf3  \{\
    \cf2 let\cf3  \cf7 min\cf3 : \cf6 Int\cf3 \
    \cf2 let\cf3  \cf7 max\cf3 : \cf6 Int\cf3 \
    \
\cf2 struct\cf3  \cf4 WeightPercent\cf3 : \cf6 CustomDebugStringConvertible\cf3 , \cf5 Storable\cf3  \{\
    \cf2 let\cf3  \cf7 value\cf3 : \cf6 Double\cf3 \
\cf2 \
struct\cf3  \cf4 RepsSet\cf3 : \cf6 CustomDebugStringConvertible\cf3 , \cf5 Storable\cf3  \{\
    \cf2 let\cf3  \cf7 reps\cf3 : \cf5 RepRange\cf3 \
    \cf2 let\cf3  \cf7 percent\cf3 : \cf5 WeightPercent\cf3 \
    \cf2 let\cf3  \cf7 restSecs\cf3 : \cf6 Int\cf3 \
\cf2 \
enum\cf3  \cf4 Sets\cf3 : \cf6 CustomDebugStringConvertible\cf3  \{\
    \cf2 case\cf3  \cf7 durations\cf3 ([\cf5 DurationSet\cf3 ], targetSecs: [\cf6 Int\cf3 ] = [])\
    \cf2 case\cf3  \cf7 maxReps\cf3 (restSecs: [\cf6 Int\cf3 ], targetReps: \cf6 Int\cf3 ? = \cf2 nil\cf3 )\
    \cf2 case\cf3  \cf7 repRanges\cf3 (warmups: [\cf5 RepsSet\cf3 ], worksets: [\cf5 RepsSet\cf3 ], backoffs: [\cf5 RepsSet\cf3 ])\
\cf2 \
class\cf3  \cf4 Modality\cf3 : \cf6 CustomDebugStringConvertible\cf3  \{\
    \cf2 var\cf3  \cf7 apparatus\cf3 : \cf5 Apparatus\cf3 \
    \cf2 var\cf3  \cf7 sets\cf3 : \cf5 Sets\cf3 \
\cf2 \
class\cf3  \cf4 Expected\cf3 : \cf6 CustomDebugStringConvertible\cf3  \{\
    \cf2 var\cf3  \cf7 weight\cf3 : \cf6 Double\cf3       \cf8 // may be 0.0\cf3 \
    \cf2 var\cf3  \cf7 reps\cf3 : [\cf6 Int\cf3 ]         \cf8 // work and backoff sets for Sets.repsRanges, usually used for variable reps but user can override fixed reps\cf3 \
\cf2 \
class\cf3  \cf4 Exercise\cf3 : \cf6 Hashable\cf3 , \cf6 Identifiable\cf3  \{\
    \cf2 var\cf3  \cf7 name\cf3 : \cf6 String\cf3              \cf8 // "Heavy Bench"\cf3 \
    \cf2 var\cf3  \cf7 formalName\cf3 : \cf6 String\cf3        \cf8 // "Bench Press"\cf3 \
    \cf2 var\cf3  \cf7 modality\cf3 : \cf5 Modality\cf3 \
    \cf2 var\cf3  \cf7 expected\cf3 : \cf5 Expected\cf3 \
    \cf2 var\cf3  \cf7 current\cf3 : \cf5 Current\cf3 ? = \cf2 nil\cf3  \cf8 // this is reset to nil if it's been too long since the user was doing the exercise\cf3 \
    \cf2 let\cf3  \cf7 id\cf3 : \cf6 Int\cf3 \
\pard\pardeftab720\partightenfactor0

\f1\fs36 \cf10 \expnd0\expndtw0\kerning0
\ul \ulc10 \
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://developer.apple.com/tutorials/swiftui/creating-and-combining-views"}}{\fldrslt \cf10 https://developer.apple.com/tutorials/swiftui/creating-and-combining-views}}\
\pard\pardeftab720\partightenfactor0

\fs24 \cf10 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0

\f2\fs48 \cf11 \kerning1\expnd0\expndtw0 \ulnone Personal - user data, e.g. sex, age, and fitness\
Workouts - relatively fixed list of what the user is expected to do, includes edit notes\
History - historical data for exercises, index by formal name, include exercise name, \
	maybe also workout(s) name, probably also set info, maybe also routine name\
Expected - what the user should do\
Progression - how current should change over time, usually weight, could also auto-add exercises\
Advisor - uses personal, edit notes, history, and plan to suggest edits, weight changes, etc\
Stringify - text renderer\
\
Program = Workouts + Plan + Advisor(?)\
	could have hashtable of Exercise to Current+History, maybe also Plan and Advisor\
	\
\pard\pardeftab720\partightenfactor0

\fs36 \cf0 \expnd0\expndtw0\kerning0
Should be able to add notes to a program 
\f0\fs34 \cf3 \kerning1\expnd0\expndtw0 \
\pard\tx816\pardeftab816\pardirnatural\partightenfactor0
\cf7 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0

\f2\fs48 \cf11 \
Worked out 35 times.  
\f3\b no one really cares about this
\f2\b0 \
2, 4, 8, 10 days ago \
\
3x in the last week, 10x in the last month\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0

\f3\b \cf11 RepRangesView\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0

\f2\b0 \cf11 Name\
Formal Name\
Weight\
Durations: [30m 10m 20]  \
Target: [30m 10m 20]\
Rest: [30s 30s 0]\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0

\f3\b \cf11 HistoryView\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0

\f2\b0 \cf11 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0

\f3\b \cf11 NoteView\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0

\f2\b0 \cf11 already have an EditNoteView\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0

\f3\b \cf11 TimerView?
\f2\b0 	
\f4\fs46 \cf13 \cb14 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl380\partightenfactor0

\f2\fs48 \cf11 \cb1 \kerning1\expnd0\expndtw0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0
\cf11 \'95 Workout sublabel doesn\'92t update properly after finishing an exercise\
	- eg after updated max reps expected	\
\'95 Is Current.weight being used correctly?\
\'95\'a0May want to check for blank names elsewhere\
	- probably should add an isEmptyOrBlank extension on String\
\'95\'a0Instead of init? (and the enum helper versions?) use fileprivate and create functions.\
\'95\'a0Need a way to change exercise type.\
	- probably don\'92t want to do this in the Edit[ExerciseType]Views\
\'95\'a0Need a way to change apparatus.\
\'95 ProgramView should be using fuzzy day matching		\
\'95\'a0Should do something with maxReps targetReps\
\'95 Hard code some info\
	- age\
	- sex\
	- fitness level\
\'95\'a0Probably should support metric units early.\
	- maybe via a Weight class\
	- or maybe just rely on some sort of presentation function\
\'95 Would be nice to easily edit results of last exercise, especially for stuff like pullups.\
\'95\'a0May want some sort of notification if a workout is due today\
	- should have a way to disable this\
\'95\'a0Would be cool to hard-code some real lifting numbers into history.\
\'95\'a0Add a wizard to build an initial workout.\
\'95 Support stuff like leg press:\
	- should we have a DiscreteWeight type?\
\'95 Support dumbbells\
\'95\'a0Support barbells\
\'95\'a0Just have a handful of starter programs. Or maybe just synthesize one based on a wizard?\
	- then user can edit without worrying about what is built-in or not\
\
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://www.raywenderlich.com/7242045-swift-package-manager-for-ios"}}{\fldrslt 
\f1\fs36 \cf10 \expnd0\expndtw0\kerning0
\ul https://www.raywenderlich.com/7242045-swift-package-manager-for-ios}}
\f1\fs36 \cf10 \expnd0\expndtw0\kerning0
\ul \
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://artsy.github.io/blog/2019/01/05/its-time-to-use-spm/"}}{\fldrslt 
\fs38 \cf10 https://artsy.github.io/blog/2019/01/05/its-time-to-use-spm/}}
\f2\fs48 \cf11 \kerning1\expnd0\expndtw0 \ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0
\cf11 	\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0

\f3\b \cf11 SwiftUI
\f2\b0 \
\'95\'a0when to use property wrappers: {\field{\*\fldinst{HYPERLINK "https://jaredsinclair.com/2020/05/07/swiftui-cheat-sheet.html"}}{\fldrslt 
\f1\fs34 \cf10 \expnd0\expndtw0\kerning0
\ul https://jaredsinclair.com/2020/05/07/swiftui-cheat-sheet.html}}\
\'aa property wrapper overview: {\field{\*\fldinst{HYPERLINK "https://swiftwithmajid.com/2019/06/12/understanding-property-wrappers-in-swiftui/"}}{\fldrslt 
\f1\fs36 \cf10 \expnd0\expndtw0\kerning0
\ul https://swiftwithmajid.com/2019/06/12/understanding-property-wrappers-in-swiftui/}}\
\'95 view.body can only have a single view: can use stacks for multiple groups\
\'95\'a0List works with identifiable data\
	either implement Identifiable protocol\
	or pass along with the data a key path to a property that uniquely identifies the element\
\'95\'a0List sub-views don\'92t have to be the same subtype, can explicitly add sub-views, or handle it similar to ForEach\
\'95\'a0List navigation requires\
	1) embed the List in a NavigationView\
	2) embed each row view within a NavigationLink (to setup transition to dest view when clicked)\
	    simple value type elements can use \\.self as the key path, see LanmarkList_Previews in {\field{\*\fldinst{HYPERLINK "https://developer.apple.com/tutorials/swiftui/building-lists-and-navigation"}}{\fldrslt 
\f1\fs34 \cf10 \expnd0\expndtw0\kerning0
\ul https://developer.apple.com/tutorials/swiftui/building-lists-and-navigation}}\
\'95 ForEach is like List but doesn\'92t have a special appearence\
	- can use ForEach inside List, see {\field{\*\fldinst{HYPERLINK "https://stackoverflow.com/questions/56535326/what-is-the-difference-between-list-and-foreach-in-swiftui"}}{\fldrslt 
\f1\fs34 \cf10 \expnd0\expndtw0\kerning0
\ul https://stackoverflow.com/questions/56535326/what-is-the-difference-between-list-and-foreach-in-swiftui}}\
\'95\'a0Views can wrap other views to encapsulate a series of modifiers\
	- see CircleImage in {\field{\*\fldinst{HYPERLINK "https://developer.apple.com/tutorials/swiftui/building-lists-and-navigation"}}{\fldrslt 
\f1\fs34 \cf10 \expnd0\expndtw0\kerning0
\ul https://developer.apple.com/tutorials/swiftui/building-lists-and-navigation}}\
\'95 GeometryReader is used to retrieve sizing info from parent view\
\'95 animations are kind of cool: can fade or slide in and out\
\'95 can use the @State attribute to mark fields that change over time\
	- views are structs and structs can\'92t normally change their own fields, see {\field{\*\fldinst{HYPERLINK "https://medium.com/flawless-app-stories/swiftui-understanding-state-8afa23fd9f1f"}}{\fldrslt 
\f1\fs34 \cf10 \expnd0\expndtw0\kerning0
\ul https://medium.com/flawless-app-stories/swiftui-understanding-state-8afa23fd9f1f}}\
\'95 bindings act as a reference to mutable state\
\'95 ObservableObjects are bound to a view and loaded from storage\
	- @Published attribute is used to notify UI to update\
\'95 @EnvironmentObject is used to bind to data passed downward via the environmentObject modifier\
\'95 previews are used by the Canvas inspector, can use Group to show variations\
\'95 command-click brings up the structed editing popover\
\'95\'a0Menus can be nested: https://swifttom.com/2020/09/02/how-to-show-a-menu-when-a-button-is-pressed-in-swiftui/\
\'95 button placement: {\field{\*\fldinst{HYPERLINK "https://developer.apple.com/design/human-interface-guidelines/ios/views/alerts/"}}{\fldrslt 
\f1\fs32 \cf10 \expnd0\expndtw0\kerning0
\ul https://developer.apple.com/design/human-interface-guidelines/ios/views/alerts/}}\
\'95 font types: {\field{\*\fldinst{HYPERLINK "https://i.stack.imgur.com/89c8C.png"}}{\fldrslt 
\f1\fs38 \cf10 \expnd0\expndtw0\kerning0
\ul https://i.stack.imgur.com/89c8C.png}}\
\'95\'a0view composition: https://stackoverflow.com/questions/57686218/creating-baseview-class-in-swiftui\

\f3\b \
Goals\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0

\f2\b0 \cf11 \'95\'a0Make it a lot easier to change up exercises and plans\
	- probably want to lean on wizards\
	- recommend stuff like \
		` moving on to non-linear progression\
		` adding rest\
		` more protein\
		` changing rep range\
		` being more consistent\
		` conditioning\
		` address weak point (this can be specific to some of the key exercises)\
		` technique\
		` probably want to do only one of these at a time (this could be a strong recommendation)\
		` record what the change was\
	- depends on stuff like age, sex, stalled, regressed, sleep, diet, consistency, cutting\
	- probably want to remember their level\
	- wait a month after last action and provide a new recommendation (or tell them they're doing well)\
\'95\'a0Heart rate can tell you if over trained? Can we hook into other app's medical data?\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0

\f3\b \cf11 \'95\'a0
\f2\b0 Do much bettered showing long term trends\
	- both overall and for an exercise\
	- include actions taken in response to a recommendation\
	- probably should also allow for user notes\
\'95\'a0May want a way to save the current iteration of a workout.\
\'95 Awards would be great.\
\'95 Don't worry about tracking cardio.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0

\f3\b\fs60 \cf11 Workouts Tab
\fs48 \
Workouts     
\f2\b0 \ul \ulc11 Edit
\f3\b \ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0

\f2\b0 \cf11 Heavy >        
\f5\i goes to a Workout view
\f2\i0 \
Light >\
Medium >\
	\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0

\f3\b \cf11 Heavy     
\f2\b0 \ul Edit
\f3\b \ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0

\f2\b0 \cf11 Bench >        
\f5\i goes to an Exercise view
\f2\i0 \
Squat >\
Dead >\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0

\f3\b \cf11 Bench     
\f2\b0 \ul Notes
\f3\b \ulnone  
\f2\b0 \ul Edit
\f3\b \ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0

\f2\b0 \cf11 Set 1 of 1\
8 reps @ 125 lbs\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0
\cf11 \ul Done\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0

\f3\b\fs60 \cf11 \ulnone History Tab
\fs48 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0

\f2\b0 \cf11 should this have a way to see exercises that are not currently used?\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0

\f3\b\fs60 \cf11 \
Advise Tab
\fs48 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0

\f2\b0 \cf11 tell them if they are on track?\
can we make the tab red if advise is pending?\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0

\f3\b\fs60 \cf11 \
Settings Tab
\fs48 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab816\pardirnatural\partightenfactor0

\f2\b0 \cf11 DoB\
gender\
level\
\
\
\pard\tx816\pardeftab816\pardirnatural\partightenfactor0

\f0\fs34 \cf3     \
}